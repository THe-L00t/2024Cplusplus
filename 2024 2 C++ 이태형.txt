

=====================================================
저장시간:2024-09-11 15:44:58.3533739
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	// [실습] 몇 단을 출력할지 물어보고 그 단에 해당하는 구구단을 출력 
	int n;
	std::cout << "몇 단을 출력하시겠습니까? : ";
	std::cin >> n;
	for (int i = 1; i < 10; ++i) {
		std::cout << n << " x " << i << " = " << n * i << std::endl;
	}

	save("소스.cpp");
}


=====================================================
저장시간:2024-09-11 15:51:27.9330035
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	// [실습] 몇 단을 출력할지 물어보고 그 단에 해당하는 구구단을 출력 
	int n;
	std::cout << "몇 단을 출력하시겠습니까? : ";
	std::cin >> n;

	for (int i = 1; i < 10; ++i) {
		for (int j = 1; j < 10; ++j) {
			std::println("{1} x {0} = {2:^20d}", i, j, i * j);
			//std::cout << n << " x " << i << " = " << n * i << std::endl;

		}
	}


	save("소스.cpp");
}


=====================================================
저장시간:2024-09-11 15:52:50.1278541
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	// [실습] 몇 단을 출력할지 물어보고 그 단에 해당하는 구구단을 출력 
	int n;
	std::cout << "몇 단을 출력하시겠습니까? : ";
	std::cin >> n;

	for (int i = 1; i < 10; ++i) {
		for (int j = 1; j < 10; ++j) {
			std::print("{1} x {0} = {2:4d}", i, j, i * j);
			//std::cout << n << " x " << i << " = " << n * i << std::endl;

		}
	}


	save("소스.cpp");
}


=====================================================
저장시간:2024-09-11 15:54:58.9701157
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	// [실습] 몇 단을 출력할지 물어보고 그 단에 해당하는 구구단을 출력 
	int n;
	std::cout << "몇 단을 출력하시겠습니까? : ";
	std::cin >> n;

	for (int i = 1; i < 10; ++i) {
		for (int j = 1; j < 10; j+=3) {
			std::print("{1:2d} x {0:2d} = {2:^4d}", i, j, i * j);
			std::print("{1:2d} x {0:2d} = {2:^4d}", i, j+1, i * (j+1));
			std::println("{1:2d} x {0:2d} = {2:^4d}", i, j+2, i * (j+2));
			//std::cout << n << " x " << i << " = " << n * i << std::endl;

		}
	}


	save("소스.cpp");
}


=====================================================
저장시간:2024-09-11 15:55:29.5670129
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	// [실습] 몇 단을 출력할지 물어보고 그 단에 해당하는 구구단을 출력 
	int n;
	std::cout << "몇 단을 출력하시겠습니까? : ";
	std::cin >> n;

	for (int i = 1; i < 10; ++i) {
		for (int j = 1; j < 10; j+=3) {
			std::print("{0:2d} x {1:2d} = {2:^4d}", i, j, i * j);
			std::print("{0:2d} x {1:2d} = {2:^4d}", i, j+1, i * (j+1));
			std::println("{0:2d} x {1:2d} = {2:^4d}", i, j+2, i * (j+2));
			//std::cout << n << " x " << i << " = " << n * i << std::endl;

		}
	}


	save("소스.cpp");
}


=====================================================
저장시간:2024-09-11 15:57:06.1668879
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	// [실습] 몇 단을 출력할지 물어보고 그 단에 해당하는 구구단을 출력 
	int n;
	std::cout << "몇 단을 출력하시겠습니까? : ";

	for (int i = 1; i < 10; ++i) {
		int n = 1;
		for (int j = 1; j < 10; j+=3) {
			
			std::print("{1:2d} x {0:2d} = {2:^4d}", i, n, i * j);
			std::print("{1:2d} x {0:2d} = {2:^4d}", i, n+1, i * (j+1));
			std::println("{1:2d} x {0:2d} = {2:^4d}", i, n+2, i * (j+2));
			//std::cout << n << " x " << i << " = " << n * i << std::endl;

		}
	}


	save("소스.cpp");
}


=====================================================
저장시간:2024-09-11 15:57:33.7286357
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	// [실습] 몇 단을 출력할지 물어보고 그 단에 해당하는 구구단을 출력 
	int n;
	std::cout << "몇 단을 출력하시겠습니까? : ";

	for (int i = 1; i < 10; ++i) {
		int n = 1;
		for (int j = 1; j < 10; ++j) {
			
			std::print("{1:2d} x {0:2d} = {2:^4d}", i, n, i * j);
			std::print("{1:2d} x {0:2d} = {2:^4d}", i, n+1, i * (j+1));
			std::println("{1:2d} x {0:2d} = {2:^4d}", i, n+2, i * (j+2));
			//std::cout << n << " x " << i << " = " << n * i << std::endl;

		}
	}


	save("소스.cpp");
}


=====================================================
저장시간:2024-09-11 15:57:49.0346796
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	// [실습] 몇 단을 출력할지 물어보고 그 단에 해당하는 구구단을 출력 
	int n;
	std::cout << "몇 단을 출력하시겠습니까? : "<<std::endl;

	for (int i = 1; i < 10; ++i) {
		int n = 1;
		for (int j = 1; j < 10; ++j) {
			
			std::print("{1:2d} x {0:2d} = {2:^4d}", i, n, i * j);
			std::print("{1:2d} x {0:2d} = {2:^4d}", i, n+1, i * (j+1));
			std::println("{1:2d} x {0:2d} = {2:^4d}", i, n+2, i * (j+2));
			//std::cout << n << " x " << i << " = " << n * i << std::endl;

		}
	}


	save("소스.cpp");
}


=====================================================
저장시간:2024-09-11 16:00:39.9254679
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	// [실습] 몇 단을 출력할지 물어보고 그 단에 해당하는 구구단을 출력 
	int n1,n2;
	std::cout << "숫자를 입력하시오: " <<std::endl;
	std::cin >> n1 >> n2;
//[문제] int 2개를 입력받아 합계를 계산하여 출력하라 
	std::println("{0:2d} + {1:2d} = {2:4d}", n1, n2, n1 + n2);

	save("소스.cpp");
}


=====================================================
저장시간:2024-09-11 16:01:00.4032971
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	// [실습] 몇 단을 출력할지 물어보고 그 단에 해당하는 구구단을 출력 
	int n1,n2;
	std::cout << "숫자를 입력하시오: ";
	std::cin >> n1 >> n2;
//[문제] int 2개를 입력받아 합계를 계산하여 출력하라 
	std::println("{0:^2d} + {1:^2d} = {2:^4d}", n1, n2, n1 + n2);

	save("소스.cpp");
}


=====================================================
저장시간:2024-09-11 16:01:33.6408756
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	// [실습] 몇 단을 출력할지 물어보고 그 단에 해당하는 구구단을 출력 
	int n1,n2;
	std::cout << "숫자를 입력하시오: ";
	std::cin >> n1 >> n2;
//[문제] int 2개를 입력받아 합계를 계산하여 출력하라 
	std::println("{0:^2} + {1:^2} = {2:^4d}", n1, n2, n1 + n2);

	save("소스.cpp");
}


=====================================================
저장시간:2024-09-11 16:48:30.1124869
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명 9.12
//--------------------------------------------------------------------------------------
// 자료형과 변수 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	//int의 최댓값을 출력하라 
	unsigned int un;
	un = -1;
	int n = un / 2;
	std::cout << n << std::endl;

	save("소스.cpp");
}


=====================================================
저장시간:2024-09-11 16:49:17.0584151
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명 9.12
//--------------------------------------------------------------------------------------
// 자료형과 변수 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	//int의 최댓값을 출력하라 
	unsigned int un;
	un = -1;
	int n = un / 2;
	n = n + 1;
	std::cout << n << std::endl;

	save("소스.cpp");
}


=====================================================
저장시간:2024-09-11 16:53:41.7994345
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명 9.12
//--------------------------------------------------------------------------------------
// 자료형과 변수 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	//int의 최댓값을 출력하라 
	unsigned int un;
	un = -1;
	int n = un / 2;
	std::cout << n << std::endl;

	save("소스.cpp");
}


=====================================================
저장시간:2024-09-11 16:58:51.3086103
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명 9.12
//--------------------------------------------------------------------------------------
// 자료형과 변수 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	//int의 최댓값을 출력하라 
	int num = 0b01111111'11111111'11111111'11111111 ;
	//0b는 바이너리임을 나타냄
	unsigned int un;
	un = -1;
	//int n = un / 2;
	std::cout << num << std::endl;

	save("소스.cpp");
}


=====================================================
저장시간:2024-09-11 17:10:12.5632588
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명 9.12
//--------------------------------------------------------------------------------------
// 자료형과 변수 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	//int의 최댓값을 출력하라 
	int num = 0b01111111'11111111'11111111'11111111 ;
	//0b는 바이너리임을 나타냄, 0x는 16진수
	unsigned int un;
	un = -1;
	//int n = un / 2;
	std::cout << num << std::numeric_limits<int>::max() << std::endl;

	save("소스.cpp");
}


=====================================================
저장시간:2024-09-11 17:10:25.3652157
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명 9.12
//--------------------------------------------------------------------------------------
// 자료형과 변수 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	//int의 최댓값을 출력하라 
	int num = 0b01111111'11111111'11111111'11111111 ;
	//0b는 바이너리임을 나타냄, 0x는 16진수
	unsigned int un;
	un = -1;
	//int n = un / 2;
	std::cout << num << std::numeric_limits<int>::min() << std::endl;

	save("소스.cpp");
}


=====================================================
저장시간:2024-09-11 17:12:24.5128337
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명 9.12
//--------------------------------------------------------------------------------------
// 자료형과 변수 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	int num;
	std::cout << "num의 크기 : " << sizeof(num) << std::endl;
	std::cout << "num의 주소 : " << std::addressof(num) << std::endl;
	std::cout << "num의 타입 : " << typeid(num).name() << std::endl;

	save("소스.cpp");
}


=====================================================
저장시간:2024-09-12 15:55:58.0256647
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명 9.12
//--------------------------------------------------------------------------------------
// 자료형과 변수 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	int num;
	std::cout << "num의 크기 : " << sizeof(num) << std::endl;
	std::cout << "num의 주소 : " << std::addressof(num) << std::endl;
	std::cout << "num의 타입 : " << typeid(num).name() << std::endl;

	//[실습]n의 모든 원소의 값을 화면에 출력하라
	int n[]{ 1,2,3,4,5,6,7,8,9,10 };
	for (int i = 0; i < 10; ++i) {
	std::cout << n[i]<<std::endl;
	}

	save("소스.cpp");
}


=====================================================
저장시간:2024-09-12 15:56:28.5156103
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명 9.12
//--------------------------------------------------------------------------------------
// 자료형과 변수 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	int num;
	std::cout << "num의 크기 : " << sizeof(num) << std::endl;
	std::cout << "num의 주소 : " << std::addressof(num) << std::endl;
	std::cout << "num의 타입 : " << typeid(num).name() << std::endl;

	//[실습]n의 모든 원소의 값을 화면에 출력하라
	int n[]{ 1,2,3,4,5,6,7,8,9,10 };
	for (int i = 0; i < 10; ++i) {
	std::cout << n[i]<<std::endl;
	}
	std::cout << n << std::endl;

	save("소스.cpp");
}


=====================================================
저장시간:2024-09-12 15:57:09.9823812
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명 9.12
//--------------------------------------------------------------------------------------
// 자료형과 변수 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{
	int num;
	std::cout << "num의 크기 : " << sizeof(num) << std::endl;
	std::cout << "num의 주소 : " << std::addressof(num) << std::endl;
	std::cout << "num의 타입 : " << typeid(num).name() << std::endl;

	//[실습]n의 모든 원소의 값을 화면에 출력하라
	int n[]{ 1,2,3,4,5,6,7,8,9,10 };
	for (int i = 0; i < 10; ++i) {
	std::cout << n[i]<<" "<< *(n+i) <<std::endl;
	}

	save("소스.cpp");
}


=====================================================
저장시간:2024-09-12 16:02:45.9370118
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명 9.12
//--------------------------------------------------------------------------------------
// 자료형과 변수 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{

	//[실습]n의 모든 원소의 값을 화면에 출력하라
	int n[]{ 1,2,3,4,5,6,7,8,9,10 };
	for (int i = 0; i < sizeof n / sizeof (int); ++i) {
	std::cout << n[i]<<"  "<< *(n+i) <<std::endl;
	}

	save("소스.cpp");
}


=====================================================
저장시간:2024-09-12 16:06:39.1031690
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명 9.12
//--------------------------------------------------------------------------------------
// 자료형과 변수 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{

	//[실습]n의 모든 원소의 값을 화면에 출력하라
	int n[]{ 1,2,3,4,5,6,7,8,9,10 };
	for (int i = 0; i < sizeof n / sizeof (int); ++i) {
	std::cout << n[i]<<"  "<< *(n+i) <<std::endl;
	}

	//중요
	for (int num :n) {
		std::cout << num << " ";
	}
	std::cout << std::endl;

	save("소스.cpp");
}


=====================================================
저장시간:2024-09-12 16:11:49.3165925
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명 9.12
//--------------------------------------------------------------------------------------
// 자료형과 변수 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{

	//[실습]n의 모든 원소의 값을 화면에 출력하라
	int n[]{ 1,2,3,4,5,6,7,8,9,10 };
	//for (int i = 0; i < sizeof n / sizeof (int); ++i) {
	//std::cout << n[i]<<"  "<< *(n+i) <<std::endl;
	//}

	////중요 range-base for =>range for
	//for (int num :n) {
	//	std::cout << num << " ";
	//}
	//std::cout << std::endl;

	//[실습] n의 값중에서 가장 큰 값을 찾아 화면에 출력하라
	int max = 0;
	for (int num : n) {
		max = (max < num) ? num : max;
	}
	std::cout << max << std::endl;

	save("소스.cpp");
}


=====================================================
저장시간:2024-09-12 16:17:22.9363804
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명 9.12
//--------------------------------------------------------------------------------------
// 자료형과 변수 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{

	//[실습]n의 모든 원소의 값을 화면에 출력하라
	int n[]{ 1,2,3,4,5,6,7,8,9,10 };
	//for (int i = 0; i < sizeof n / sizeof (int); ++i) {
	//std::cout << n[i]<<"  "<< *(n+i) <<std::endl;
	//}

	////중요 range-base for =>range for
	//for (int num :n) {
	//	std::cout << num << " ";
	//}
	//std::cout << std::endl;

	//[실습] n의 값중에서 가장 큰 값을 찾아 화면에 출력하라
	int max{std::numeric_limits<int>::min()};
	for (int num : n) 
		max = (max < num) ? num : max;
	std::cout << max << std::endl;

	save("소스.cpp");
}


=====================================================
저장시간:2024-09-12 16:17:43.3730191
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명 9.12
//--------------------------------------------------------------------------------------
// 자료형과 변수 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{

	//[실습]n의 모든 원소의 값을 화면에 출력하라
	int n[]{ 1,2,3,4,5,6,7,8,9,10 };
	//for (int i = 0; i < sizeof n / sizeof (int); ++i) {
	//std::cout << n[i]<<"  "<< *(n+i) <<std::endl;
	//}

	////중요 range-base for =>range for
	//for (int num :n) {
	//	std::cout << num << " ";
	//}
	//std::cout << std::endl;

	//[실습] n의 값중에서 가장 큰 값을 찾아 화면에 출력하라
	int max{std::numeric_limits<int>::min()};
	for (int n : n) 
		max = (max < n) ? n : max;
	std::cout << max << std::endl;

	save("소스.cpp");
}


=====================================================
저장시간:2024-09-12 16:31:02.7551805
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
// 
// 과제 설명 9.12
//--------------------------------------------------------------------------------------
// 자료형과 변수 
//--------------------------------------------------------------------------------------

#include <iostream>
#include <chrono>
#include <fstream>
#include <print>

#include "save.h"

//C++ 실행 파일에는 항상 cout, cin, cerr, clog 객체가 default 생성

int main()
{

	//[실습]n의 모든 원소의 값을 화면에 출력하라
	int n[]{ 1,2,3,4,5,6,7,8,9,10 };
	//for (int i = 0; i < sizeof n / sizeof (int); ++i) {
	//std::cout << n[i]<<"  "<< *(n+i) <<std::endl;
	//}

	////중요 range-base for =>range for
	//for (int num :n) {
	//	std::cout << num << " ";
	//}
	//std::cout << std::endl;

	//[실습] n의 값중에서 가장 큰 값을 찾아 화면에 출력하라
	int max{std::numeric_limits<int>::min()};
	for (int n : n) 
		max = (max < n) ? n : max;
	std::cout << max << std::endl;

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-12 16:37:20.3624946
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 추석 9.18(수) 보강은 16주차 10.3(목) 강의실 수업
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>

#include "save.h"

std::default_random_engine dre;


int main()
{
	
	std::cout << sizeof dre << std::endl;
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-12 16:39:19.3066428
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 추석 9.18(수) 보강은 16주차 10.3(목) 강의실 수업
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>

#include "save.h"

std::default_random_engine dre;
std::uniform_int_distribution uid;

int main()
{
	for (int i = 0; i < 10; ++i) {
		std::cout << uid(dre) << std::endl;
	}
	
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-12 16:45:20.4545325
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 추석 9.18(수) 보강은 16주차 10.3(목) 강의실 수업
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>

#include "save.h"

std::random_device rd;
std::default_random_engine dre{ rd() };
std::uniform_int_distribution uid;

//pseudo-random 가짜 랜덤

int main()
{
	for (int i = 0; i < 10; ++i) {
		std::cout << uid(dre) << std::endl;
	}
	
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-12 16:48:19.8147231
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 추석 9.18(수) 보강은 16주차 10.3(목) 강의실 수업
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>

#include "save.h"

std::random_device rd;
std::default_random_engine dre{ rd() };
std::uniform_int_distribution uid{1,999};

//pseudo-random 가짜 랜덤

int main()
{
	for (int i = 0; i < 10; ++i) {
		std::cout << uid(dre) << std::endl;
	}
	
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-12 16:54:21.2916177
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 추석 9.18(수) 보강은 16주차 10.3(목) 강의실 수업
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>

#include "save.h"

std::random_device rd;
std::default_random_engine dre{ rd() };
std::uniform_int_distribution uid{1,999};

//pseudo-random 가짜 랜덤
//distribution 분포

int main()
{
	for (int i = 0; i < 10; ++i) {
		std::cout << uid(dre) << std::endl;
	}
	
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-12 17:06:58.1091571
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 추석 9.18(수) 보강은 16주차 10.3(목) 강의실 수업
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>

#include "save.h"

std::default_random_engine dre;
std::uniform_int_distribution uid{1,9999};

//pseudo-random 가짜 랜덤
//distribution 분포

int main()
{
	int n[1'000];
	////랜덤값으로 n을 채운다.
	//for (int& num : n) {
	//	num = uid(dre);
	//}
	//
	//for (int num : n) {
	//	std::print("{ :8}", num);
	//}

	//[문제] 사용자가 찾는 값이 있는지 알려주자 
	//있으면 찾았다, 없으면 못 찾았다. 라고 출력하자 

	int wn;
	std::string result;
	std::cout << "찾으시는 값을 입력하세요 : ";
	std::cin >> wn;
	for (int num : n)
		(num == wn) ? result = "찾았다." : result = result;
	std::cout <<result << std::endl;
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-12 17:09:46.6249402
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 추석 9.18(수) 보강은 16주차 10.3(목) 강의실 수업
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>

#include "save.h"

std::default_random_engine dre;
std::uniform_int_distribution uid{1,9999};

//pseudo-random 가짜 랜덤
//distribution 분포

int main()
{
	int n[1000];
	//랜덤값으로 n을 채운다.
	for (int& num : n) {
		num = uid(dre);
		std::cout << "debug";
	}
	
	//[문제] 사용자가 찾는 값이 있는지 알려주자 
	//있으면 찾았다, 없으면 못 찾았다. 라고 출력하자 

	int wn;
	std::string result = "못 찾았다.";
	std::cout << "찾으시는 값을 입력하세요 : ";
	std::cin >> wn;
	for (int num : n)
		(num == wn) ? result = "찾았다." : result = result;
	std::cout << result << std::endl;
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-12 17:10:13.7156976
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 추석 9.18(수) 보강은 16주차 10.3(목) 강의실 수업
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>

#include "save.h"

std::default_random_engine dre;
std::uniform_int_distribution uid{1,9999};

//pseudo-random 가짜 랜덤
//distribution 분포

int main()
{
	int n[1000];
	//랜덤값으로 n을 채운다.
	for (int& num : n) {
		num = uid(dre);
		//std::cout << "debug";
	}
	
	//[문제] 사용자가 찾는 값이 있는지 알려주자 
	//있으면 찾았다, 없으면 못 찾았다. 라고 출력하자 

	int wn;
	std::string result = "못 찾았다.";
	std::cout << "찾으시는 값을 입력하세요 : ";
	std::cin >> wn;
	for (int num : n)
		(num == wn) ? result = "찾았다." : result = result;
	std::cout << result << std::endl;
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-12 17:13:03.5161100
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 추석 9.18(수) 보강은 16주차 10.3(목) 강의실 수업
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>

#include "save.h"

std::default_random_engine dre;
std::uniform_int_distribution uid{1,9999};

//pseudo-random 가짜 랜덤
//distribution 분포

int main()
{
	int n[1000];
	//랜덤값으로 n을 채운다.
	for (int& num : n) {
		num = uid(dre);
		//std::cout << "debug";
	}
	
	//[문제] 사용자가 찾는 값이 있는지 알려주자 
	//있으면 찾았다, 없으면 못 찾았다. 라고 출력하자 

	int wn;
	std::string result = "못 찾았다.";
	std::cout << "찾으시는 값을 입력하세요 : ";
	std::cin >> wn;
	for (int num : n) {
		//(num == wn) ? result = "찾았다." : result = result;
		if (wn == num) {
			result = "찾았다.";
			std::cout << num << result << std::endl;
		}
	}
	std::cout << result << std::endl;
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-12 17:15:38.6899930
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 추석 9.18(수) 보강은 16주차 10.3(목) 강의실 수업
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>

#include "save.h"

std::default_random_engine dre;
std::uniform_int_distribution uid{1,9999};

//pseudo-random 가짜 랜덤
//distribution 분포

int main()
{
	int n[8000];
	//랜덤값으로 n을 채운다.
	for (int& num : n) {
		num = uid(dre);
		//std::cout << "debug";
	}
	
	//[문제] 사용자가 찾는 값이 있는지 알려주자 
	//있으면 찾았다, 없으면 못 찾았다. 라고 출력하자 

	int wn;
	std::string result = "못 찾았다.";
	std::cout << "찾으시는 값을 입력하세요 : ";
	std::cin >> wn;

	bool flag{ false };
	for (int num : n) {
		//(num == wn) ? result = "찾았다." : result = result;
		if (wn == num) {
			result = "찾았다.";
			std::cout << num << result << std::endl;
			flag = true;
			break;
		}
	}
	if (not flag) {
		std::cout << "못 찾았다" << std::endl;
	}
	std::cout << result << std::endl;
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-12 17:18:59.0069832
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (2주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 추석 9.18(수) 보강은 16주차 10.3(목) 강의실 수업
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>

#include "save.h"

std::default_random_engine dre;
std::uniform_int_distribution uid{1,6};

//pseudo-random 가짜 랜덤
//distribution 분포

int main()
{
	//[문제]다음과 같이 주사위를 백만번 던졌다. 
	//각 숫자가 나올 확류을 화면 출력하라 
	for (int i = 0; i < 100'0000; ++i) {
		uid(dre);
	}

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 15:38:07.6645972
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include "save.h"

std::default_random_engine dre;
std::uniform_int_distribution uid{1,6};

//pseudo-random 가짜 랜덤
//distribution 분포

int main()
{
	int n[6]{};
	//[문제]다음과 같이 주사위를 백만번 던졌다. 
	//각 숫자가 나올 확류을 화면 출력하라 
	for (int i = 0; i < 100'0000; ++i) {
		int num = uid(dre);
		if (num == 1) {
			++n[0];
		}
		else if (num == 2) {
			++n[1];
		}
		else if (num == 3) {
			++n[2];
		}
		else if (num == 4) {
			++n[3];
		}
		else if (num == 5) {
			++n[4];
		}
		else if (num == 6) {
			++n[5];
		}
	}

	std::print("1이 나온 확률 - %.2f %%", n[0] / 100'0000. * 100);
	std::print("2이 나온 확률 - %.2f %%", n[1] / 100'0000. * 100);
	std::print("3이 나온 확률 - %.2f %%", n[2] / 100'0000. * 100);
	std::print("4이 나온 확률 - %.2f %%", n[3] / 100'0000. * 100);
	std::print("5이 나온 확률 - %.2f %%", n[4] / 100'0000. * 100);
	std::print("6이 나온 확률 - %.2f %%", n[5] / 100'0000. * 100);
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 15:38:54.4183246
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include "save.h"

std::default_random_engine dre;
std::uniform_int_distribution uid{1,6};

//pseudo-random 가짜 랜덤
//distribution 분포

int main()
{
	int n[6]{};
	//[문제]다음과 같이 주사위를 백만번 던졌다. 
	//각 숫자가 나올 확류을 화면 출력하라 
	for (int i = 0; i < 100'0000; ++i) {
		int num = uid(dre);
		if (num == 1) {
			++n[0];
		}
		else if (num == 2) {
			++n[1];
		}
		else if (num == 3) {
			++n[2];
		}
		else if (num == 4) {
			++n[3];
		}
		else if (num == 5) {
			++n[4];
		}
		else if (num == 6) {
			++n[5];
		}
	}

	std::print("1이 나온 확률 - {:.2f} %", n[0] / 100'0000. * 100);
	std::print("2이 나온 확률 - {:.2f} %%", n[1] / 100'0000. * 100);
	std::print("3이 나온 확률 - {:.2f} %%", n[2] / 100'0000. * 100);
	std::print("4이 나온 확률 - {:.2f} %%", n[3] / 100'0000. * 100);
	std::print("5이 나온 확률 - {:.2f} %%", n[4] / 100'0000. * 100);
	std::print("6이 나온 확률 - {:.2f} %%", n[5] / 100'0000. * 100);
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 15:39:24.6516450
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include "save.h"

std::default_random_engine dre;
std::uniform_int_distribution uid{1,6};

//pseudo-random 가짜 랜덤
//distribution 분포

int main()
{
	int n[6]{};
	//[문제]다음과 같이 주사위를 백만번 던졌다. 
	//각 숫자가 나올 확류을 화면 출력하라 
	for (int i = 0; i < 100'0000; ++i) {
		int num = uid(dre);
		if (num == 1) {
			++n[0];
		}
		else if (num == 2) {
			++n[1];
		}
		else if (num == 3) {
			++n[2];
		}
		else if (num == 4) {
			++n[3];
		}
		else if (num == 5) {
			++n[4];
		}
		else if (num == 6) {
			++n[5];
		}
	}

	std::println("1이 나온 확률 - {:.2f}%", n[0] / 100'0000. * 100);
	std::println("2이 나온 확률 - {:.2f}%", n[1] / 100'0000. * 100);
	std::println("3이 나온 확률 - {:.2f}%", n[2] / 100'0000. * 100);
	std::println("4이 나온 확률 - {:.2f}%", n[3] / 100'0000. * 100);
	std::println("5이 나온 확률 - {:.2f}%", n[4] / 100'0000. * 100);
	std::println("6이 나온 확률 - {:.2f}%", n[5] / 100'0000. * 100);
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 15:42:47.6545961
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include "save.h"

std::default_random_engine dre;
std::uniform_int_distribution uid{1,6};

//pseudo-random 가짜 랜덤
//distribution 분포

int main()
{
	int n[6]{};
	//[문제]다음과 같이 주사위를 백만번 던졌다. 
	//각 숫자가 나올 확류을 화면 출력하라 
	for (int i = 0; i < 100'0000; ++i) {
		int num = uid(dre);
		for (int j = 0; j < 6; ++j) {
			if (num == j + 1) ++n[j];
		}
	}

	for (int i = 1; i < 7; ++i) {
		std::println("{}이 나온 확률 - {:.2f}%",i, n[i] / 100'0000. * 100);
	}
	std::println("1이 나온 확률 - {:.2f}%", n[0] / 100'0000. * 100);
	std::println("2이 나온 확률 - {:.2f}%", n[1] / 100'0000. * 100);
	std::println("3이 나온 확률 - {:.2f}%", n[2] / 100'0000. * 100);
	std::println("4이 나온 확률 - {:.2f}%", n[3] / 100'0000. * 100);
	std::println("5이 나온 확률 - {:.2f}%", n[4] / 100'0000. * 100);
	std::println("6이 나온 확률 - {:.2f}%", n[5] / 100'0000. * 100);
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 15:42:53.0530241
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include "save.h"

std::default_random_engine dre;
std::uniform_int_distribution uid{1,6};

//pseudo-random 가짜 랜덤
//distribution 분포

int main()
{
	int n[6]{};
	//[문제]다음과 같이 주사위를 백만번 던졌다. 
	//각 숫자가 나올 확류을 화면 출력하라 
	for (int i = 0; i < 100'0000; ++i) {
		int num = uid(dre);
		for (int j = 0; j < 6; ++j) {
			if (num == j + 1) ++n[j];
		}
	}

	for (int i = 1; i < 7; ++i) {
		std::println("{}이 나온 확률 - {:.2f}%",i, n[i] / 100'0000. * 100);
	}
	std::println("1이 나온 확률 - {:.2f}%", n[0] / 100'0000. * 100);
	std::println("2이 나온 확률 - {:.2f}%", n[1] / 100'0000. * 100);
	std::println("3이 나온 확률 - {:.2f}%", n[2] / 100'0000. * 100);
	std::println("4이 나온 확률 - {:.2f}%", n[3] / 100'0000. * 100);
	std::println("5이 나온 확률 - {:.2f}%", n[4] / 100'0000. * 100);
	std::println("6이 나온 확률 - {:.2f}%", n[5] / 100'0000. * 100);
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 15:43:14.1479162
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include "save.h"

std::default_random_engine dre;
std::uniform_int_distribution uid{1,6};

//pseudo-random 가짜 랜덤
//distribution 분포

int main()
{
	int n[6]{};
	//[문제]다음과 같이 주사위를 백만번 던졌다. 
	//각 숫자가 나올 확류을 화면 출력하라 
	for (int i = 0; i < 100'0000; ++i) {
		int num = uid(dre);
		for (int j = 0; j < 6; ++j) {
			if (num == j + 1) ++n[j];
		}
	}

	for (int i = 1; i < 7; ++i) {
		std::println("{}이 나온 확률 - {:.2f}%",i, n[i-1] / 100'0000. * 100);
	}
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 15:46:36.1442672
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include "save.h"

std::default_random_engine dre;
std::uniform_int_distribution uid{1,6};

//pseudo-random 가짜 랜덤
//distribution 분포

int main()
{
	int n[6]{};	//일반 배열은 앞으로 사용금지하자.

	//[문제]다음과 같이 주사위를 백만번 던졌다. 
	//각 숫자가 나올 확류을 화면 출력하라 
	for (int i = 0; i < 100'0000; ++i) {
		/*int num = uid(dre);
		for (int j = 0; j < 6; ++j) {
			if (num == j + 1) ++n[j];
		}*/
		n[uid(dre) - 1]++;
	}

	for (int i = 1; i < 7; ++i) {
		std::println("{}이 나온 확률 - {:.2f}%",i, n[i-1] / 100'0000. * 100);
	}

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 15:48:53.7011445
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include <array>

#include "save.h"

std::default_random_engine dre;
std::uniform_int_distribution uid{1,6};

//pseudo-random 가짜 랜덤
//distribution 분포

int main()
{
	//int n[6]{};	//일반 배열은 앞으로 사용금지하자.
	std::array<int, 6>n{};


	//[문제]다음과 같이 주사위를 백만번 던졌다. 
	//각 숫자가 나올 확류을 화면 출력하라 
	for (int i = 0; i < 100'0000; ++i) {
		/*int num = uid(dre);
		for (int j = 0; j < 6; ++j) {
			if (num == j + 1) ++n[j];
		}*/
		n[uid(dre) - 1]++;
	}

	for (int i = 1; i < n.size(); ++i) {
		std::println("{}이 나온 확률 - {:.2f}%",i, n[i-1] / 100'0000. * 100);
	}

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 15:49:51.9074996
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include <array>

#include "save.h"

#define Play 100'0000.

std::default_random_engine dre;
std::uniform_int_distribution uid{1,6};


//pseudo-random 가짜 랜덤
//distribution 분포

int main()
{
	//int n[6]{};	//일반 배열은 앞으로 사용금지하자.
	std::array<int, 6>n{};


	//[문제]다음과 같이 주사위를 백만번 던졌다. 
	//각 숫자가 나올 확류을 화면 출력하라 
	for (int i = 0; i < Play; ++i) {
		/*int num = uid(dre);
		for (int j = 0; j < 6; ++j) {
			if (num == j + 1) ++n[j];
		}*/
		n[uid(dre) - 1]++;
	}

	for (int i = 1; i < n.size(); ++i) {
		std::println("{}이 나온 확률 - {:.2f}%",i, n[i-1] / Play * 100);
	}

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 15:50:20.7206977
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 랜덤엔진과 분포
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include <array>

#include "save.h"

#define Play 100'0000.

std::default_random_engine dre;
std::uniform_int_distribution uid{1,6};


//pseudo-random 가짜 랜덤
//distribution 분포

int main()
{
	//[문제]다음과 같이 주사위를 백만번 던졌다. 
	//각 숫자가 나올 확류을 화면 출력하라 
	
	//int n[6]{};	//일반 배열은 앞으로 사용금지하자.
	std::array<int, 6>n{};


	
	for (int i = 0; i < Play; ++i) {
		/*int num = uid(dre);
		for (int j = 0; j < 6; ++j) {
			if (num == j + 1) ++n[j];
		}*/
		n[uid(dre) - 1]++;
	}

	for (int i = 1; i < n.size(); ++i) {
		std::println("{}이 나온 확률 - {:.2f}%",i, n[i-1] / Play * 100);
	}

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:05:33.1150641
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	int num = 123;	//초기화 initialization
					//RAII(Resource Acquisition Is Initialization)

	num = 123;
	num = 234;		// 할당, 대입 assignment


	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:06:15.5137288
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	//int num[? ];
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:07:42.9201873
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[1'0000'0000]; //C2148 배열의 전체 크기는 0x7fff'ffff 바이트를 초과할 수 없습니다. 
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:17:26.4276867
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[1'000'000'000/4]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:19:52.1862227
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[268'435'456]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:19:57.5446440
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[268'435'457]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:25:50.0801832
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[400'000'000]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:25:56.8229138
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[500'000'000]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:26:07.8753300
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[510'000'000]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:26:33.1518730
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[511'000'000]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:26:42.9814591
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[511'500'000]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:26:48.4248291
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[511'300'000]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:26:52.1890797
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[511'700'000]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:26:56.7514562
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[511'900'000]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:27:29.1064172
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[511'990'000]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:27:34.3502202
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[511'999'000]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:27:39.2027568
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[511'999'00]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:27:44.1140133
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[511'999'900]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:27:47.5011185
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[511'999'90]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:27:50.9742029
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[511'999'990]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:28:17.5851265
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[511'999'992]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:28:36.8671779
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[511'999'992]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:30:14.9835212
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	//[문제] num은 몇 개의 int를 담을 수 있는가?
	//당신의 결론은?

	int num[511'999'992]; //C2148 배열의 전체 크기는 0x7fff'ffff = 2147483647 바이트를 초과할 수 없습니다. 
	//536'870'911 만큼 생성가능

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:34:43.0379813
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	{
		{
			int num;
			std::cout << "num의 주소 " << std::addressof(num) << std::endl;
		}
	}
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:35:09.5357180
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"


int main()
{
	int n;
	std::cout << "num의 주소 " << std::addressof(n) << std::endl;
	{
		{
			int num;
			std::cout << "num의 주소 " << std::addressof(num) << std::endl;
		}
	}
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:35:41.8694688
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int num1;
int main()
{
	int n;
	std::cout << "n의 주소 " << std::addressof(n) << std::endl;
	{
		{
			int num;
			std::cout << "num의 주소 " << std::addressof(num) << std::endl;
		}
	}
	std::cout << "num의 주소 " << std::addressof(num1) << std::endl;

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:38:13.7071002
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int num1;
const int num2 = 0;
int main()
{
	int n;
	std::cout << "n의 주소 " << std::addressof(n) << std::endl;
	{
		{
			int num;
			std::cout << "num의 주소 " << std::addressof(num) << std::endl;
		}
	}
	std::cout << "num1의 주소 " << std::addressof(num1) << std::endl;
	std::cout << "num2의 주소 " << std::addressof(num2) << std::endl;

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:40:10.0277146
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int num1;
const int num2 = 0;
int* num3 = new int{ 0 };
int main()
{
	int n;
	std::cout << "n의 주소 " << std::addressof(n) << std::endl;
	{
		{
			int num;
			std::cout << "num의 주소 " << std::addressof(num) << std::endl;
		}
	}
	std::cout << "num1의 주소 " << std::addressof(num1) << std::endl;
	std::cout << "num2의 주소 " << std::addressof(num2) << std::endl;

	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:40:20.6758466
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int num1;
const int num2 = 0;
int* num3 = new int{ 0 };
int main()
{
	int n;
	std::cout << "n의 주소 " << std::addressof(n) << std::endl;
	{
		{
			int num;
			std::cout << "num의 주소 " << std::addressof(num) << std::endl;
		}
	}
	std::cout << "num1의 주소 " << std::addressof(num1) << std::endl;
	std::cout << "num2의 주소 " << std::addressof(num2) << std::endl;
	std::cout << "num3의 주소 " << std::addressof(num3) << std::endl;
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:40:58.0213364
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int num1;
const int num2 = 0;
int* num3 = new int{ 0 };
int main()
{
	int n;
	std::cout << "n의 주소 " << std::addressof(n) << std::endl;
	{
		{
			int num;
			std::cout << "num의 주소 " << std::addressof(num) << std::endl;
		}
	}
	std::cout << "num1의 주소 " << std::addressof(num1) << std::endl; //전역 변수 
	std::cout << "num2의 주소 " << std::addressof(num2) << std::endl; //const 변수
	std::cout << "num3의 주소 " << std::addressof(num3) << std::endl; //동적할당
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:41:32.0456847
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int num1;
const int num2 = 0;

int main()
{
	int* num3 = new int{ 0 };
	int n;
	std::cout << "n의 주소 " << std::addressof(n) << std::endl;
	{
		{
			int num;
			std::cout << "num의 주소 " << std::addressof(num) << std::endl;
		}
	}
	std::cout << "num1의 주소 " << std::addressof(num1) << std::endl; //전역 변수 
	std::cout << "num2의 주소 " << std::addressof(num2) << std::endl; //const 변수
	std::cout << "num3의 주소 " << std::addressof(num3) << std::endl; //동적할당
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:44:19.9397483
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int num1;
const int num2 = 0;

int main()
{
	int* num4 = (int*)malloc(sizeof(int));
	int* num3 = new int{ 0 };
	int n;
	std::cout << "n의 주소 " << std::addressof(n) << std::endl;
	{
		{
			int num;
			std::cout << "num의 주소 " << std::addressof(num) << std::endl;
		}
	}
	std::cout << "num1의 주소 " << std::addressof(num1) << std::endl; //전역 변수 
	std::cout << "num2의 주소 " << std::addressof(num2) << std::endl; //const 변수
	std::cout << "num3의 주소 " << std::addressof(num3) << std::endl; //동적할당
	std::cout << "num의 주소 " << std::addressof(num4) << std::endl;
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:54:17.7492303
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int main()
{

	int num[511'909'992];
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:54:23.2496096
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int main()
{

	int num[511'959'992];
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:54:32.2396835
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int main()
{

	int num[511'979'992];
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:54:38.8438473
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int main()
{

	int num[511'999'992];
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:54:51.6232308
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int main()
{

	int num[511'999'992];
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:59:08.6756719
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int main()
{

	int num[100'000'000];
	
	for (int& n : num) {
		++n;
	}
	
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 16:59:44.0281191
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int main()
{

	int num[100'000'000];
	
	for (int& n : num) {
		n = n;
	}
	
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 17:00:25.0633603
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int main()
{

	int num[100'000'000];
	
	for (int i = 0; i < 100'000'000; ++i) {
		num[i] = i;
	}
	
	save("소스.cpp");
}




=====================================================
저장시간:2024-09-19 17:00:55.8327997
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int main()
{

	int num[100'000'000];
	
	for (int i = 0; i < 100'000'000; ++i) {
		num[i] = i;
	}

	std::cout << "디버깅" << std::endl;
	
	save("소스.cpp");
}

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>
#define n1 0x7fff'ffff/4

#include "save.h"

int num[0x7fff'fffe / 4];

int main()
{
	//[문제]당신은 전역변수를 최대 얼마까지 확보할 수 있나?
	//화면에 확보한 메모리의 크기를 출력하세요.
	
	for (int i = 0; i < 0x7fff'fffe / 4; ++i) {
		num[i] = i;
	}
	for (int n : num) {
		std::cout << n;
	}

	
	save("소스.cpp");
}



=====================================================
저장시간:2024-09-26 14:29:07.0938376
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.11 수                        수78목78                        (3주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 지역 / 전역 / 동적 메모리
//--------------------------------------------------------------------------------------

#include <iostream>
#define n1 0x7fff'ffff/4

#include "save.h"

//int num[0x7fff'fffe / 4];

int main()
{
	//[문제]당신은 전역변수를 최대 얼마까지 확보할 수 있나?
	//화면에 확보한 메모리의 크기를 출력하세요.
	
	/*for (int i = 0; i < 0x7fff'fffe / 4; ++i) {
		num[i] = i;
	}
	for (int n : num) {
		std::cout << n;
	}*/

	
	save("소스.cpp");
}




=====================================================
저장시간:2024-10-02 15:39:25.7812065
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (4주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 포인터와 레퍼런스
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

void change(int& a, int& b);	//선언과 정의 구분하기 

int main()
{
	int a{ 1 }, b{ 2 };
	int& aa{ a };
	
	std::cout << sizeof aa << std::endl;

	save("소스.cpp");

	
}

void change(int& a, int& b) {
	int temp{ a };
	a = b;
	b = temp;
}


=====================================================
저장시간:2024-10-02 15:54:17.1261958
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (4주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 포인터와 레퍼런스
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

void change(int& a, int& b);	//선언과 정의 구분하기 

//[문제] 다음코드는 정상적으로 실행되는 C++의 일부분이다. 
//화면에 출력되는 문자는 무엇이냐
//그렇게 이유는?

int main()
{
	int a{ 1 }, b{ 2 };

	change(a, b);

	std::cout << a << "," << b << std::endl;

	save("소스.cpp");

	
}

void change(int& a, int& b) {
	int temp{ a };
	a = b;
	b = temp;
}


=====================================================
저장시간:2024-10-02 15:59:43.5447357
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (4주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 포인터와 레퍼런스
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

void change(int& a, int& b);	//선언과 정의 구분하기 

//[문제] 다음코드는 정상적으로 실행되는 C++의 일부분(main 문)이다. 
//화면에 출력되는 문자는 무엇이냐
//그렇게 이유는?

//정확히 알 수 없다.
// 이유는 함수 오버로딩에 의해 해당 매개변수들이 형식으로 정의되어 있는지 알 수 없다.

int main()
{
	int a{ 1 }, b{ 2 };

	change(a, b); // int, int 인지 int&,int& 인지 알수 없다. 
	//함수의 오버로딩에 의해 함수의 선언문이 없이 판단할 수 없다.

	std::cout << a << "," << b << std::endl;

	save("소스.cpp");

	
}

void change(int& a, int& b) {
	int temp{ a };
	a = b;
	b = temp;
}


=====================================================
저장시간:2024-10-02 16:05:12.9317865
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (4주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 포인터와 레퍼런스
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

void change(int& a, int& b);	//선언과 정의 구분하기 

//[문제] 다음코드는 정상적으로 실행되는 C++의 일부분(main 문)이다. 
//화면에 출력되는 문자는 무엇이냐
//그렇게 이유는?

//정확히 알 수 없다.
// 이유는 함수 오버로딩에 의해 해당 매개변수들이 형식으로 정의되어 있는지 알 수 없다.

int main()
{
	int a[]{ 3,9,1,5,6,7,4,2,8,0 };

	//[실습] a의 값 중에서 가장 큰 값인 9를 제일 오른쪽으로 이동시켜라 

	for (int i = 0; i < 10; ++i) {
		for (int j = 0; j < 9-i ; ++j) {
			if (a[j] > a[j + 1]) change(a[i], a[i + 1]);
		}
	}

	save("소스.cpp");

	
}

void change(int& a, int& b) {
	int temp{ a };
	a = b;
	b = temp;
}


=====================================================
저장시간:2024-10-02 16:05:45.0134103
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (4주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 포인터와 레퍼런스
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

void change(int& a, int& b);	//선언과 정의 구분하기 

//[문제] 다음코드는 정상적으로 실행되는 C++의 일부분(main 문)이다. 
//화면에 출력되는 문자는 무엇이냐
//그렇게 이유는?

//정확히 알 수 없다.
// 이유는 함수 오버로딩에 의해 해당 매개변수들이 형식으로 정의되어 있는지 알 수 없다.

int main()
{
	int a[]{ 3,9,1,5,6,7,4,2,8,0 };

	//[실습] a의 값 중에서 가장 큰 값인 9를 제일 오른쪽으로 이동시켜라 

	for (int i = 0; i < 10; ++i) {
		for (int j = 0; j < 9-i ; ++j) {
			if (a[j] > a[j + 1]) change(a[i], a[i + 1]);
		}
	}

	for (int n : a) {
		std::cout << n << ", ";
	}

	save("소스.cpp");

	
}

void change(int& a, int& b) {
	int temp{ a };
	a = b;
	b = temp;
}


=====================================================
저장시간:2024-10-02 16:06:23.7592225
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (4주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 포인터와 레퍼런스
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

void change(int& a, int& b);	//선언과 정의 구분하기 

//[문제] 다음코드는 정상적으로 실행되는 C++의 일부분(main 문)이다. 
//화면에 출력되는 문자는 무엇이냐
//그렇게 이유는?

//정확히 알 수 없다.
// 이유는 함수 오버로딩에 의해 해당 매개변수들이 형식으로 정의되어 있는지 알 수 없다.

int main()
{
	int a[]{ 3,9,1,5,6,7,4,2,8,0 };

	//[실습] a의 값 중에서 가장 큰 값인 9를 제일 오른쪽으로 이동시켜라 

	for (int i = 0; i < 10; ++i) {
		for (int j = 0; j < 9-i ; ++j) {
			if (a[j] > a[j + 1]) change(a[j], a[j + 1]);
		}
	}

	for (int n : a) {
		std::cout << n << ", ";
	}

	save("소스.cpp");

	
}

void change(int& a, int& b) {
	int temp{ a };
	a = b;
	b = temp;
}


=====================================================
저장시간:2024-10-02 16:19:12.2713401
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (4주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 포인터와 레퍼런스
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

void change(int& a, int& b);	//선언과 정의 구분하기 

//[문제] 다음코드는 정상적으로 실행되는 C++의 일부분(main 문)이다. 
//화면에 출력되는 문자는 무엇이냐
//그렇게 이유는?

//정확히 알 수 없다.
// 이유는 함수 오버로딩에 의해 해당 매개변수들이 형식으로 정의되어 있는지 알 수 없다.

int main()
{
	int a[]{ 3,9,1,5,6,7,4,2,8,0 };

	//[실습] a를 오름차순 ascending order으로 정렬 sort하라  

	//for (int i = 0; i < 10; ++i) {
	//	for (int j = 0; j < 9-i ; ++j) {
	//		if (a[j] > a[j + 1]) change(a[j], a[j + 1]);
	//	}
	//}// bubble sort 

	int pivot = 5;
	int b[10]{};
	for (int num : a) {
		b[num] = num;
	}

	for (int n : b) {
		std::cout << n << ", ";
	}

	save("소스.cpp");

	
}

void change(int& a, int& b) {
	int temp{ a };
	a = b;
	b = temp;
}


=====================================================
저장시간:2024-10-02 16:26:34.4499919
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (4주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 포인터와 레퍼런스
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

void change(int& a, int& b);	//선언과 정의 구분하기 

//[문제] 다음코드는 정상적으로 실행되는 C++의 일부분(main 문)이다. 
//화면에 출력되는 문자는 무엇이냐
//그렇게 이유는?

//정확히 알 수 없다.
// 이유는 함수 오버로딩에 의해 해당 매개변수들이 형식으로 정의되어 있는지 알 수 없다.

int main()
{
	int a[]{ 3,9,1,5,6,7,4,2,8,0 };

	//[실습] a를 오름차순 ascending order으로 정렬 sort하라  

	//for (int i = 0; i < 10 - 1; ++i) {
	//	for (int j = 0; j < 10 - 1 - i ; ++j) {
	//		if (a[j] > a[j + 1]) change(a[j], a[j + 1]);
	//	}
	//}// bubble sort => 정답

	int b[10]{};
	for (int num : a) {
		b[num] = num;
	}

	for (int n : b) {
		std::cout << n << ", ";
	}

	save("소스.cpp");

	
}

void change(int& a, int& b) {
	int temp{ a };
	a = b;
	b = temp;
}


=====================================================
저장시간:2024-10-02 16:51:12.1548846
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (4주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 포인터와 레퍼런스
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

void change(int& a, int& b);	//선언과 정의 구분하기 

//[문제] 다음코드는 정상적으로 실행되는 C++의 일부분(main 문)이다. 
//화면에 출력되는 문자는 무엇이냐
//그렇게 이유는?

//정확히 알 수 없다.
// 이유는 함수 오버로딩에 의해 해당 매개변수들이 형식으로 정의되어 있는지 알 수 없다.

int main()
{
	int a[]{ 3,9,1,5,6,7,4,2,8,0 };

	//[실습] a를 오름차순 ascending order으로 정렬 sort하라  

	//for (int i = 0; i < 10 - 1; ++i) {
	//	for (int j = 0; j < 10 - 1 - i ; ++j) {
	//		if (a[j] > a[j + 1]) change(a[j], a[j + 1]);
	//	}
	//}// bubble sort => 정답

	int b[10]{};
	for (int num : a) {
		b[num] = num;
	}

	for (int n : b) {
		std::cout << n << ", ";
	}

	save("소스.cpp");

	
}

void change(int& a, int& b) {
	int temp{ a };
	a = b;
	b = temp;
}


=====================================================
저장시간:2024-10-02 17:04:51.6638005
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (4주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 포인터와 레퍼런스
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

void change(int& a, int& b);	//선언과 정의 구분하기 
int compare(const int* a, const int* b);

//[문제] 다음코드는 정상적으로 실행되는 C++의 일부분(main 문)이다. 
//화면에 출력되는 문자는 무엇이냐
//그렇게 이유는?

//정확히 알 수 없다.
// 이유는 함수 오버로딩에 의해 해당 매개변수들이 형식으로 정의되어 있는지 알 수 없다.

int main()
{
	int a[]{ 3,9,1,5,6,7,4,2,8,0 };
	
	//[실습] a를 qsort를 사용하여 오름차순으로 정렬 하라
	//qsort는 generic함수이다. 

	qsort(a, 10, 4, (_CoreCrtNonSecureSearchSortCompareFunction)compare);
	save("소스.cpp");

	
}

void change(int& a, int& b) {
	int temp{ a };
	a = b;
	b = temp;
}

int compare(const int* a, const int* b) {
	if (*a > *b) {
		return 1; //꼭 1이 아니라 양수이기만 하면 된다.
	}
	else {
		return -1; //음수는 자리를 바꾸지 않는다. 꼭 -1이 아니라 음수이기만 하면 된다.
	}
}


=====================================================
저장시간:2024-10-02 17:05:21.7655949
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (4주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 포인터와 레퍼런스
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

void change(int& a, int& b);	//선언과 정의 구분하기 
int compare(const int* a, const int* b);

//[문제] 다음코드는 정상적으로 실행되는 C++의 일부분(main 문)이다. 
//화면에 출력되는 문자는 무엇이냐
//그렇게 이유는?

//정확히 알 수 없다.
// 이유는 함수 오버로딩에 의해 해당 매개변수들이 형식으로 정의되어 있는지 알 수 없다.

int main()
{
	int a[]{ 3,9,1,5,6,7,4,2,8,0 };
	
	//[실습] a를 qsort를 사용하여 오름차순으로 정렬 하라
	//qsort는 generic함수이다. 

	qsort(a, 10, 4, (_CoreCrtNonSecureSearchSortCompareFunction)compare);

	for (int num : a) std::cout << a << ", ";
	save("소스.cpp");

	
}

void change(int& a, int& b) {
	int temp{ a };
	a = b;
	b = temp;
}

int compare(const int* a, const int* b) {
	if (*a > *b) {
		return 1; //꼭 1이 아니라 양수이기만 하면 된다.
	}
	else {
		return -1; //음수는 자리를 바꾸지 않는다. 꼭 -1이 아니라 음수이기만 하면 된다.
	}
}


=====================================================
저장시간:2024-10-02 17:05:41.8742251
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (4주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 포인터와 레퍼런스
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

void change(int& a, int& b);	//선언과 정의 구분하기 
int compare(const int* a, const int* b);

//[문제] 다음코드는 정상적으로 실행되는 C++의 일부분(main 문)이다. 
//화면에 출력되는 문자는 무엇이냐
//그렇게 이유는?

//정확히 알 수 없다.
// 이유는 함수 오버로딩에 의해 해당 매개변수들이 형식으로 정의되어 있는지 알 수 없다.

int main()
{
	int a[]{ 3,9,1,5,6,7,4,2,8,0 };
	
	//[실습] a를 qsort를 사용하여 오름차순으로 정렬 하라
	//qsort는 generic함수이다. 

	qsort(a, 10, 4, (_CoreCrtNonSecureSearchSortCompareFunction)compare);

	for (int num : a) std::cout << *a << ", ";
	save("소스.cpp");

	
}

void change(int& a, int& b) {
	int temp{ a };
	a = b;
	b = temp;
}

int compare(const int* a, const int* b) {
	if (*a > *b) {
		return 1; //꼭 1이 아니라 양수이기만 하면 된다.
	}
	else {
		return -1; //음수는 자리를 바꾸지 않는다. 꼭 -1이 아니라 음수이기만 하면 된다.
	}
}


=====================================================
저장시간:2024-10-02 17:07:03.0079686
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (4주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 포인터와 레퍼런스
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

void change(int& a, int& b);	//선언과 정의 구분하기 
int compare(const int* a, const int* b);

//[문제] 다음코드는 정상적으로 실행되는 C++의 일부분(main 문)이다. 
//화면에 출력되는 문자는 무엇이냐
//그렇게 이유는?

//정확히 알 수 없다.
// 이유는 함수 오버로딩에 의해 해당 매개변수들이 형식으로 정의되어 있는지 알 수 없다.

int main()
{
	int a[]{ 3,9,1,5,6,7,4,2,8,0 };
	
	//[실습] a를 qsort를 사용하여 오름차순으로 정렬 하라
	//qsort는 generic함수이다. 

	qsort(a, 10, 4, (_CoreCrtNonSecureSearchSortCompareFunction)compare);

	for (int num : a) std::cout << num << ", ";
	save("소스.cpp");

	
}

void change(int& a, int& b) {
	int temp{ a };
	a = b;
	b = temp;
}

int compare(const int* a, const int* b) {
	if (*a > *b) {
		return 1; //꼭 1이 아니라 양수이기만 하면 된다.
	}
	else {
		return -1; //음수는 자리를 바꾸지 않는다. 꼭 -1이 아니라 음수이기만 하면 된다.
	}
}


=====================================================
저장시간:2024-10-02 17:18:26.1659658
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (4주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 포인터와 레퍼런스
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

void change(int& a, int& b);	//선언과 정의 구분하기 
int 오름차순(const int* a, const int* b);

//[문제] 다음코드는 정상적으로 실행되는 C++의 일부분(main 문)이다. 
//화면에 출력되는 문자는 무엇이냐
//그렇게 이유는?

//정확히 알 수 없다.
// 이유는 함수 오버로딩에 의해 해당 매개변수들이 형식으로 정의되어 있는지 알 수 없다.

int main()
{
	int a[]{ 3,9,1,5,6,7,4,2,8,0 };
	
	//[실습] a를 qsort를 사용하여 오름차순으로 정렬 하라
	//qsort는 generic함수이다. 

	qsort(a, 10, 4, (_CoreCrtNonSecureSearchSortCompareFunction)오름차순);

	for (int num : a) std::cout << num << ", ";
	save("소스.cpp");

	
}

void change(int& a, int& b) {
	int temp{ a };
	a = b;
	b = temp;
}

int 오름차순(const int* p, const int* q) {
	//if (*a > *b) {
	//	return 1; //꼭 1이 아니라 양수이기만 하면 된다.
	//}
	//else {
	//	return -1; //음수는 자리를 바꾸지 않는다. 꼭 -1이 아니라 음수이기만 하면 된다.
	//}
	int x = *(int*)p;
	int y = *(int*)q;

	if (x < y)
		return -1;
	else if (x > y)
		return 1;
	else return 0;
}


=====================================================
저장시간:2024-10-09 15:19:17.5580547
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (4주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 포인터와 레퍼런스
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

void change(int& a, int& b);	//선언과 정의 구분하기 
int 오름차순(const int* a, const int* b);

//[문제] 다음코드는 정상적으로 실행되는 C++의 일부분(main 문)이다. 
//화면에 출력되는 문자는 무엇이냐
//그렇게 이유는?

//정확히 알 수 없다.
// 이유는 함수 오버로딩에 의해 해당 매개변수들이 형식으로 정의되어 있는지 알 수 없다.

int main()
{
	int a[]{ 3,9,1,5,6,7,4,2,8,0 };
	
	//[실습] a를 qsort를 사용하여 오름차순으로 정렬 하라
	//qsort는 generic함수이다. 

	qsort(a, 10, 4, (_CoreCrtNonSecureSearchSortCompareFunction)오름차순);

	for (int num : a) std::cout << num << ", ";
	save("소스.cpp");

	
}

void change(int& a, int& b) {
	int temp{ a };
	a = b;
	b = temp;
}

int 오름차순(const int* p, const int* q) {
	//if (*a > *b) {
	//	return 1; //꼭 1이 아니라 양수이기만 하면 된다.
	//}
	//else {
	//	return -1; //음수는 자리를 바꾸지 않는다. 꼭 -1이 아니라 음수이기만 하면 된다.
	//}
	int x = *(int*)p;
	int y = *(int*)q;

	if (x < y)
		return -1;
	else if (x > y)
		return 1;
	else return 0;
}

/*
* //--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (5주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 정렬
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include <array>

#include "save.h"


int main()
{
	[]() {std::cout << "람다lambda"; }();
	//람다 호출 람다 정의 이후 ()붙이기 
	//()또한 연산자 , 함수 호출 연산자
	
	save("소스.cpp");
}


*/

=====================================================
저장시간:2024-10-09 15:19:40.2441747
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (5주)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------------
// 정렬
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include <array>

#include "save.h"


int main()
{
	[]() {std::cout << "람다lambda"; }();
	//람다 호출 람다 정의 이후 ()붙이기 
	//()또한 연산자 , 함수 호출 연산자

	save("소스.cpp");
}


=====================================================
저장시간:2024-10-09 15:40:51.7497514
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (5주 2)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 10.31(목) - 9주 1일차 - 중간 시험예상
//--------------------------------------------------------------------------------------
// 동적할당 메모리
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include <array>

#include "save.h"


int main()
{
	//[문제] 사용자가 입력한 숫자만큼 int를 저장할 메모리를 확보하라 
	//이 메모리를 1부터 시작하는 정수로 채워라
	//메모리에 저장된 모든 정수의 합을 화면에 출력하라

	int in = -1, sum=0;
	std::cin >> in;

	int* arr = (int*)calloc(in, sizeof(int));
	for (int i = 0; i < in; ++i) {
		arr[i] = i;
		sum += i;
	}

	std::cout << sum << std::endl;

	free(arr);

	save("소스.cpp");
}


=====================================================
저장시간:2024-10-09 15:41:04.5214302
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (5주 2)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 10.31(목) - 9주 1일차 - 중간 시험예상
//--------------------------------------------------------------------------------------
// 동적할당 메모리
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include <array>

#include "save.h"


int main()
{
	//[문제] 사용자가 입력한 숫자만큼 int를 저장할 메모리를 확보하라 
	//이 메모리를 1부터 시작하는 정수로 채워라
	//메모리에 저장된 모든 정수의 합을 화면에 출력하라

	int in = -1, sum=0;
	std::cin >> in;

	int* arr = (int*)calloc(in, sizeof(int));
	for (int i = 0; i < in; ++i) {
		arr[i] = i+1;
		sum += i;
	}

	std::cout << sum << std::endl;

	free(arr);

	save("소스.cpp");
}


=====================================================
저장시간:2024-10-09 15:41:15.6131754
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (5주 2)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 10.31(목) - 9주 1일차 - 중간 시험예상
//--------------------------------------------------------------------------------------
// 동적할당 메모리
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include <array>

#include "save.h"


int main()
{
	//[문제] 사용자가 입력한 숫자만큼 int를 저장할 메모리를 확보하라 
	//이 메모리를 1부터 시작하는 정수로 채워라
	//메모리에 저장된 모든 정수의 합을 화면에 출력하라

	int in = -1, sum=0;
	std::cin >> in;

	int* arr = (int*)calloc(in, sizeof(int));
	for (int i = 0; i < in; ++i) {
		arr[i] = i+1;
		sum += i+1;
	}

	std::cout << sum << std::endl;

	free(arr);

	save("소스.cpp");
}


=====================================================
저장시간:2024-10-09 15:48:57.4488902
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (5주 2)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 10.31(목) - 9주 1일차 - 중간 시험예상
//--------------------------------------------------------------------------------------
// 동적할당 메모리
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include <array>

#include "save.h"


int main()
{
	//[문제] 사용자가 입력한 숫자만큼 int를 저장할 메모리를 확보하라 
	//이 메모리를 1부터 시작하는 정수로 채워라
	//메모리에 저장된 모든 정수의 합을 화면에 출력하라

	int in{-1}, sum{0};
	std::cin >> in;

	int* arr = (int*)calloc(in, sizeof(int));
	for (int i = 0; i < in; ++i) {
		arr[i] = i+1;
		sum += i+1;
	}

	std::cout << sum << std::endl;

	free(arr);

	//const int num{333};
	//int n[num]; const 사용하면 가능 , 그렇지 않으면 가변적이라 불가능

	save("소스.cpp");
}


=====================================================
저장시간:2024-10-09 15:49:21.8306233
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (5주 2)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 10.31(목) - 9주 1일차 - 중간 시험예상
//--------------------------------------------------------------------------------------
// 동적할당 메모리
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include <array>

#include "save.h"


int main()
{
	//[문제] 사용자가 입력한 숫자만큼 int를 저장할 메모리를 확보하라 
	//이 메모리를 1부터 시작하는 정수로 채워라
	//메모리에 저장된 모든 정수의 합을 화면에 출력하라

	int in{-1}, sum{0};
	std::cin >> in;

	int* arr = (int*)calloc(in, sizeof(int));
	for (int i = 0; i < in; ++i) {
		arr[i] = i+1;
		sum += i+1;
	}

	std::cout << sum << std::endl;

	free(arr);

	//const int num{333};
	//int n[num]; const 사용하면 가능 , 그렇지 않으면 가변적이라 불가능

	save("소스.cpp");
}


=====================================================
저장시간:2024-10-09 15:51:46.2365315
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (5주 2)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 10.31(목) - 9주 1일차 - 중간 시험예상
//--------------------------------------------------------------------------------------
// 동적할당 메모리
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include <array>

#include "save.h"


int main()
{
	//[문제] 사용자가 입력한 숫자만큼 int를 저장할 메모리를 확보하라 
	//이 메모리를 1부터 시작하는 정수로 채워라
	//메모리에 저장된 모든 정수의 합을 화면에 출력하라

	int in{-1}, sum{0};
	std::cin >> in;

	int* arr = (int*)calloc(in, sizeof(int));
	if (arr == NULL) { return 1; }
	for (int i = 0; i < in; ++i) {
		arr[i] = i+1;
		sum += i+1;
	}

	std::cout << sum << std::endl;

	free(arr);

	//const int num{333};
	//int n[num]; const 사용하면 가능 , 그렇지 않으면 가변적이라 불가능

	save("소스.cpp");
}


=====================================================
저장시간:2024-10-09 16:11:24.0786246
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (5주 2)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 10.31(목) - 9주 1일차 - 중간 시험예상
//--------------------------------------------------------------------------------------
// 동적할당 메모리
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include <array>

#include "save.h"


int main()
{
	//[문제] 사용자가 입력한 숫자만큼 int를 저장할 메모리를 확보하라 
	//이 메모리를 1부터 시작하는 정수로 채워라
	//메모리에 저장된 모든 정수의 합을 화면에 출력하라

	int in{-1}, sum{0};
	std::cin >> in;

	int* arr = (int*)calloc(in, sizeof(int));//malloc ( contiguous 연속적인 메모리를 요청)
	if (arr == NULL) { return 1; }
	for (int i = 0; i < in; ++i) { //동적할당의 경우 range for문 불가
		arr[i] = i+1;
	}
	for (int i = 0; i < in; ++i) {
		sum += arr[i];
	}
	//
	std::cout << sum << std::endl;

	free(arr);

	//const int num{333};
	//int n[num]; const 사용하면 가능 , 그렇지 않으면 가변적이라 불가능

	save("소스.cpp");
}


=====================================================
저장시간:2024-10-09 16:14:54.9261263
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (5주 2)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 10.31(목) - 9주 1일차 - 중간 시험예상
//--------------------------------------------------------------------------------------
// 동적할당 메모리
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include <array>

#include "save.h"


int main()
{
	//[문제]동적할당으로 얻을 수 있는 가장 큰 메모리는 
	//이 메모리는 contiguous하다 
	new char[1'000'000'000];
	std::cout << "문제없이 할당";

	save("소스.cpp");
}


=====================================================
저장시간:2024-10-09 16:15:25.4676864
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (5주 2)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 10.31(목) - 9주 1일차 - 중간 시험예상
//--------------------------------------------------------------------------------------
// 동적할당 메모리
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include <array>

#include "save.h"


int main()
{
	//[문제]동적할당으로 얻을 수 있는 가장 큰 메모리는 
	//이 메모리는 contiguous하다 
	new char[1'000'000'000];
	std::cout << "문제없이 할당";

	save("소스.cpp");
}


=====================================================
저장시간:2024-10-09 16:32:41.3880744
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (5주 2)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 10.31(목) - 9주 1일차 - 중간 시험예상
//--------------------------------------------------------------------------------------
// 동적할당 메모리
//--------------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <print>
#include <array>

#include "save.h"



int main()
{
	//[문제]동적할당으로 얻을 수 있는 가장 큰 메모리는 
	//이 메모리는 contiguous하다 
	new char[1'000'000'000];
	std::cout << "문제없이 할당";

	save("소스.cpp");
}


=====================================================
저장시간:2024-10-09 16:58:18.2390058
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (5주 2)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 10.31(목) - 9주 1일차 - 중간 시험예상
//--------------------------------------------------------------------------------------
// C++ 실행파일 메모리  - STACK, DATA, free store, CODE
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

using namespace std::literals;

char c[1'000'000'000];

int main()
{
	for (int i = 0; i < 10; ++i) {
		std::cout << (char)(c[i] + 7) << std::endl;
	}
	save("소스.cpp");
}


=====================================================
저장시간:2024-10-09 17:04:11.2089750
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (5주 2)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 10.31(목) - 9주 1일차 - 중간 시험예상
//--------------------------------------------------------------------------------------
// C++ 실행파일 메모리  - STACK, DATA, free store, CODE
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

using namespace std::literals;

char c[1'000'000'000]{ 'A', 'B','C' };

int main()
{
	for (int i = 0; i < 10; ++i) {
		std::cout << (char)(c[i] + 7) << std::endl;
	}
	save("소스.cpp");
}


=====================================================
저장시간:2024-10-09 17:18:25.2023681
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (5주 2)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 10.31(목) - 9주 1일차 - 중간 시험예상
//--------------------------------------------------------------------------------------
// C++ 실행파일 메모리  - STACK, DATA, free store, CODE
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int add(int, int);

int main()
{

	int num{ 123 };
	int* pn = &num;

	std::cout << "add의 자료형: " << typeid(add).name() << std::endl;

	//[](int, int)* {} fp = add; //함수를 어떻게 save할 수 있나

	(*save)("소스.cpp");//정석 함수 호출
}

int add(int a, int b) {
	return a + b;
}


=====================================================
저장시간:2024-10-10 15:17:57.0303983
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (5주 2)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 10.31(목) - 9주 1일차 - 중간 시험예상
//--------------------------------------------------------------------------------------
// C++ 실행파일 메모리  - STACK, DATA, free store, CODE
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int add(int, int);

int main()
{

	int num{ 123 };
	int* pn = &num;

	std::cout << "add의 자료형: " << typeid(add).name() << std::endl;

	int (*fp)(int, int) = add; //함수를 어떻게 save할 수 있나
	fp;
	(*save)("소스.cpp");//정석 함수 호출
}

int add(int a, int b) {
	return a + b;
}


=====================================================
저장시간:2024-10-10 15:18:11.5960003
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (5주 2)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 10.31(목) - 9주 1일차 - 중간 시험예상
//--------------------------------------------------------------------------------------
// C++ 실행파일 메모리  - STACK, DATA, free store, CODE
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int add(int, int);

int main()
{

	int num{ 123 };
	int* pn = &num;

	std::cout << "add의 자료형: " << typeid(add).name() << std::endl;

	int (*fp)(int, int) = add; //함수를 어떻게 save할 수 있나
	fp(12,34);
	(*save)("소스.cpp");//정석 함수 호출
}

int add(int a, int b) {
	return a + b;
}


=====================================================
저장시간:2024-10-10 15:18:30.8666606
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (5주 2)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 10.31(목) - 9주 1일차 - 중간 시험예상
//--------------------------------------------------------------------------------------
// C++ 실행파일 메모리  - STACK, DATA, free store, CODE
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

int add(int, int);

int main()
{

	int num{ 123 };
	int* pn = &num;

	std::cout << "add의 자료형: " << typeid(add).name() << std::endl;

	int (*fp)(int, int) = add; //함수를 어떻게 save할 수 있나
	std::cout<< fp(12,34)<<std::endl;
	(*save)("소스.cpp");//정석 함수 호출
}

int add(int a, int b) {
	return a + b;
}


=====================================================
저장시간:2024-10-10 15:40:22.8012918
=====================================================

//--------------------------------------------------------------------------------------
//    2024. 2학기 9.24 수                        수78목78                        (6주 1)
//
// 참고 -  c++ core guideline 
//--------------------------------------------------------------------------------------
// 10.31(목) - 9주 1일차 - 중간 시험예상
//--------------------------------------------------------------------------------------
// C++ 실행파일 메모리  - STACK, DATA, free store, CODE
//--------------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

//new int; 는 이름을 정할 수 없음 왜??
//시험 문제임
//


//모든 이름들은 메모리 주소를 나타낸다.

int main()
{
	int* p = new int[1'0000];	//1. 자원을 확보

	//2. 자원을 활용 (메모리를 읽고, 쓰다)
	p[333] = 333;
	std::cout << p[333] << std::endl;

	//3. 자원을 반환(반드시)
	delete[] p;

	(*save)("소스.cpp");//정석 함수 호출
}
